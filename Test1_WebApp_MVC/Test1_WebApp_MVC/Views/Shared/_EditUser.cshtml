@using Test1_WebApp_MVC.Models;
@using Test1_WebApp_MVC.Services;

@model UserViewModel<User>

@*     
    actionName: @Model.ActionName </br>
    controllerName: @Model.ControllerName </br>
    sender: @Model.Sender </br>
    user: <br />
    &nbsp; Id: @(Model.UserData?.Id.ToString() ?? "null") </br>
    &nbsp; Name: @(Model.UserData?.Name ?? "null") <br />
    &nbsp; Surname: @(Model.UserData?.Surname ?? "null") <br />
    &nbsp; CellNumber: @(Model.UserData?.CellNumber ?? "null") <br />
 *@

<div>
    @using (Html.BeginForm(Model.ActionName, Model.ControllerName, FormMethod.Post))
    {
        <form>
            <div class="textBoxRow">
                <label for="inputName" class="col-12 col-md-3 text-right">First Name</label>
                @Html.TextBoxFor(u => u.UserData.Name, htmlAttributes: new { @class = "col-12 col-md-9", @id = "inputName", @required = "required", autofocus = "auto", @placeholder = "First Name..." })
            </div>

            <div class="textBoxRow">
                <label for="inputSurname" class="col-12 col-md-3 text-right">Surname</label>
                @Html.TextBoxFor(u => u.UserData.Surname, htmlAttributes: new { @class = "col-12 col-md-9", @id = "inputSurname", @required = "required", @placeholder = "Surname..." })
            </div>

            <div class="textBoxRow">
                <label for="inputCell" class="col-12 col-md-3 text-right">Cellphone Number</label>
                @Html.TextBoxFor(u => u.UserData.CellNumber, htmlAttributes: new { @class = "col-12 col-md-9", @id = "inputCell", @required = "required", @placeholder = @Utils.VALID_PHONE_EXAMPLE })
            </div>

            @Html.HiddenFor(u => u.UserData.Id)
            <button class="btn btn-primary col-md-offset-11" type="submit">Submit</button>            
        </form>
    }
</div>

